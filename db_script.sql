CREATE TABLE Account (
	AccountID UNIQUEIDENTIFIER PRIMARY KEY,
    Email NVARCHAR(255) UNIQUE NOT NULL,
    DateRegistered DATETIME NOT NULL
);

CREATE TABLE Town (
	TownID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Town NVARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE Profile (
	ProfileID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	DisplayName NVARCHAR(255) NOT NULL,
	House NVARCHAR(255) NOT NULL,
	Locality NVARCHAR(255) NULL,
	TownID UNIQUEIDENTIFIER NOT NULL,
	AccountID UNIQUEIDENTIFIER NOT NULL UNIQUE,
	FOREIGN KEY (AccountID) REFERENCES Account(AccountID),
	FOREIGN KEY (TownID) REFERENCES Town(TownID)
); 

CREATE TABLE Brand (
	BrandID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Brand NVARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE Category (
	CategoryID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Category NVARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE Product (
	ProductID UNIQUEIDENTIFIER PRIMARY KEY,
    Barcode NVARCHAR(255) UNIQUE,
    Name NVARCHAR(255) NOT NULL,
    BrandID UNIQUEIDENTIFIER NOT NULL,
    CategoryID UNIQUEIDENTIFIER NOT NULL,
    Weight INT NOT NULL,
    Price FLOAT NOT NULL,
    FOREIGN KEY (BrandID) REFERENCES Brand(BrandID),
    FOREIGN KEY (CategoryID) REFERENCES Category(CategoryID)
);

CREATE TABLE Rating (
    RatingID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    ProductID UNIQUEIDENTIFIER NOT NULL,
    Overall FLOAT,
    OneStar INT,
    TwoStar INT,
    ThreeStar INT,
    FourStar INT,
    FiveStar INT,
    ReviewsNumber INT,
    ProductQuality NVARCHAR(50),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID)
);

CREATE TABLE Orders (
	OrderID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    AccountID UNIQUEIDENTIFIER NOT NULL,
    OrderDate DATETIME NOT NULL,
    FOREIGN KEY (AccountID) REFERENCES Account(AccountID)
);

CREATE TABLE OrderItem (
	OrderID UNIQUEIDENTIFIER NOT NULL,
    ProductID UNIQUEIDENTIFIER NOT NULL,
    Quantity INT NOT NULL,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID),
    PRIMARY KEY(OrderId, ProductId)
); 